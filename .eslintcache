[{"D:\\matth\\programation\\my-app\\NSI-Projet\\src\\index.js":"1","D:\\matth\\programation\\my-app\\NSI-Projet\\src\\App.jsx":"2","D:\\matth\\programation\\my-app\\NSI-Projet\\src\\reportWebVitals.js":"3","D:\\matth\\programation\\my-app\\NSI-Projet\\src\\signup.jsx":"4","D:\\matth\\programation\\my-app\\NSI-Projet\\src\\login.jsx":"5","D:\\matth\\programation\\my-app\\NSI-Projet\\src\\Home.jsx":"6","D:\\matth\\programation\\my-app\\NSI-Projet\\src\\components\\chat.jsx":"7","D:\\matth\\programation\\my-app\\NSI-Projet\\src\\application2.jsx":"8","D:\\matth\\programation\\my-app\\NSI-Projet\\src\\withAuth.jsx":"9","D:\\matth\\programation\\my-app\\NSI-Projet\\src\\components\\friend_nom.jsx":"10","D:\\matth\\programation\\my-app\\NSI-Projet\\src\\friends-liste.jsx":"11"},{"size":598,"mtime":1614542028508,"results":"12","hashOfConfig":"13"},{"size":1104,"mtime":1615649184670,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1614542028510,"results":"15","hashOfConfig":"13"},{"size":3231,"mtime":1614542028510,"results":"16","hashOfConfig":"13"},{"size":3129,"mtime":1614542565884,"results":"17","hashOfConfig":"13"},{"size":1965,"mtime":1615652279327,"results":"18","hashOfConfig":"13"},{"size":5312,"mtime":1615648113258,"results":"19","hashOfConfig":"13"},{"size":3478,"mtime":1615648113257,"results":"20","hashOfConfig":"13"},{"size":1566,"mtime":1614542028512,"results":"21","hashOfConfig":"13"},{"size":1806,"mtime":1615648113259,"results":"22","hashOfConfig":"13"},{"size":3496,"mtime":1615649097812,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1txmw58",{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"26"},"D:\\matth\\programation\\my-app\\NSI-Projet\\src\\index.js",[],["53","54"],"D:\\matth\\programation\\my-app\\NSI-Projet\\src\\App.jsx",["55","56","57"],"import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Router, Link, Switch } from \"react-router-dom\"\r\nimport Home from './Home.jsx';\r\nimport Login from './login.jsx';\r\nimport Signup from './signup.jsx'\r\nimport Friendsliste from './friends-liste.jsx'\r\nimport Application2 from './application2'\r\nimport withAuth from './withAuth'\r\nimport Chat from './components/chat.jsx'\r\n\r\nclass App extends Component {\r\n  // différente route renvoyant un composant react\r\n  render() {\r\n    return (\r\n    <BrowserRouter>\r\n      <div>\r\n        <Switch>\r\n            <Route path=\"/\" exact component={Home}/>\r\n            <Route path=\"/signup\" component={Signup} />\r\n            <Route path=\"/login\" component={Login} />\r\n            {/*withAuth permet de renvoyer le composant \"Application\" si la vérification des cookies est validé par le server*/}\r\n            <Route path=\"/app/friendlist\" component={withAuth(Friendsliste)} />\r\n            <Route path=\"/app2/:id\" component={withAuth(Application2)}/>\r\n        </Switch>\r\n        </div>\r\n    </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","D:\\matth\\programation\\my-app\\NSI-Projet\\src\\reportWebVitals.js",[],"D:\\matth\\programation\\my-app\\NSI-Projet\\src\\signup.jsx",["58","59","60","61","62","63","64","65","66"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { BrowserRouter, Route, Router, Link, Switch } from \"react-router-dom\"\r\n\r\nexport default class signup extends Component {\r\n    // création des states suivant\r\n    constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n        email : '',\r\n        mdp: '',\r\n        pseudo:'',\r\n        message:''\r\n      };\r\n    }\r\n    // ajout des changement lorsque le texte de l'input change\r\n    handleInputChange = (event) => {\r\n      const { value, name } = event.target;\r\n      this.setState({\r\n        [name]: value\r\n      });\r\n    }\r\n    // quand bouton submit pressé, envoyé une requête POST au serveur pour insérer le nouvel utilisateur dans la base de donnée\r\n    onSubmit = (event) => {\r\n      event.preventDefault();\r\n      console.log(\"state signup : \",this.state);\r\n\r\n      fetch('http://localhost:4000/authentification/signup', {\r\n        method: 'POST',\r\n        // credentials : include permet d'intégrer les cookie avec la requête\r\n        credentials: 'include',\r\n        body: JSON.stringify({\r\n          pseudo:this.state.pseudo,\r\n          email:this.state.email,\r\n          mdp:this.state.mdp\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n      .then((value) => {\r\n        if (value.status === 200) {\r\n          // s'il y a eu aucune erreur redirigé à l'acceuil\r\n          this.props.history.push('/');\r\n          console.log(\"info envoyé\");\r\n        } else {\r\n          // s'il y a eu une erreur, renvoyer le message suivant\r\n          this.setState({message:'Pseudo ou email déjà utilisé'});\r\n        }\r\n      })\r\n\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <div className=\"nav-barre\" id=\"nav-barre\">\r\n            <div className=\"logo-parti\">\r\n                <img className=\"logo\" id=\"logo1\" alt=\"logo\" src=\"image/logo-ichat.png\" alt=\"logo ichat\"/>\r\n            </div>\r\n            <div class=\"bouton-parti \">\r\n              {/*\"Link\" permet de faire une lien vers un chemin précis*/}\r\n                <a id=\"link1\"><Link to=\"/app\">Application</Link></a>\r\n                <a id=\"link2\" ><Link to=\"/signup\">Signin</Link></a>\r\n                <a id=\"link3\"><Link to=\"/login\">Login</Link></a>\r\n            </div>\r\n        </div>\r\n          <form onSubmit={this.onSubmit}>\r\n          <h1>Login Below!</h1>\r\n          <input\r\n            type=\"text\"\r\n            name=\"pseudo\"\r\n            placeholder=\"Enter pseudo\"\r\n            value={this.state.pseudo}\r\n            onChange={this.handleInputChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={this.state.email}\r\n            onChange={this.handleInputChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"mdp\"\r\n            placeholder=\"Enter password\"\r\n            value={this.state.mdp}\r\n            onChange={this.handleInputChange}\r\n            required\r\n          />\r\n          <input type=\"submit\" value=\"Submit\"/>\r\n        </form>\r\n        <p>{this.state.message}</p>\r\n        </div>\r\n      );\r\n\r\n    }\r\n  }","D:\\matth\\programation\\my-app\\NSI-Projet\\src\\login.jsx",["67","68","69","70","71","72","73","74","75"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { BrowserRouter, Route, Router, Link, Switch } from \"react-router-dom\"\r\n\r\nexport default class login extends Component {\r\n      // création des states suivant\r\n    constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n        email : '',\r\n        mdp: '',\r\n        message:''\r\n      };\r\n    }\r\n    // ajout des changement lorsque le texte de l'input change\r\n    handleInputChange = (event) => {\r\n      const { value, name } = event.target;\r\n      this.setState({\r\n        [name]: value\r\n      });\r\n    }\r\n  \r\n    // lorsque le formulaire est submit, envoyer la requête POST suivante, qui envois les données\r\n    onSubmit = (event) => {\r\n      event.preventDefault();\r\n      console.log(\"state login : \",this.state)\r\n      fetch('http://localhost:4000/authentification/signin', {\r\n        method: 'POST',\r\n        // credentials : include permet d'intégrer les cookie avec la requête\r\n        credentials: 'include', \r\n        body: JSON.stringify({\r\n          email:this.state.email,\r\n          mdp:this.state.mdp\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          // s'il y a aucune erreur, renvoyer vers l'acceuil\r\n          this.props.history.push('/');\r\n        }if (res.status === 401){\r\n          // si erreur code est 401, renvoyer ce message\r\n          this.setState({message:'Mot de passee incorrecte'});\r\n        } \r\n        else {\r\n          // sinon, renvoyer ce message\r\n          this.setState({message:'Mot de passe ou email incorrecte'});\r\n        }\r\n      })\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n            <div className=\"nav-barre\" id=\"nav-barre\">\r\n            <div className=\"logo-parti\">\r\n                <img className=\"logo\" id=\"logo1\" alt=\"logo\" src=\"image/logo-ichat.png\" alt=\"logo ichat\"/>\r\n            </div>\r\n            <div class=\"bouton-parti \">\r\n                <a id=\"link1\"><Link to=\"/app\">Application</Link></a>\r\n                <a id=\"link2\" ><Link to=\"/signup\">Signin</Link></a>\r\n                <a id=\"link3\"><Link to=\"/login\">Login</Link></a>\r\n            </div>\r\n        </div>\r\n        <form onSubmit={this.onSubmit}>\r\n                    <h1>Login Below!</h1>\r\n                    <input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Enter email\"\r\n                      value={this.state.email}\r\n                      onChange={this.handleInputChange}\r\n                      required\r\n                    />\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"mdp\"\r\n                      placeholder=\"Enter password\"\r\n                      value={this.state.mdp}\r\n                      onChange={this.handleInputChange}\r\n                      required\r\n                    />\r\n                    <input type=\"submit\" value=\"Submit\"/>\r\n                  </form>\r\n                  <p>{this.state.message}</p>\r\n        </div>\r\n      );\r\n\r\n    }\r\n  }","D:\\matth\\programation\\my-app\\NSI-Projet\\src\\Home.jsx",["76","77","78","79","80","81","82","83"],"D:\\matth\\programation\\my-app\\NSI-Projet\\src\\components\\chat.jsx",["84","85"],"import React, { Component } from 'react';\r\nimport '../style/app.css'\r\nimport io from \"socket.io-client\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n\r\nexport default class Chat extends Component {\r\n  // création du state \"message\"\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          message : '',\r\n          friendid:'',\r\n          groupetext:[{_id:0, text:\"\", author:\"\"}]\r\n        };\r\n      }\r\n      // ajout des changement lorsque le texte de l'input change\r\n      handleInputChange = (event) => {\r\n        const { value, name } = event.target;\r\n        this.setState({\r\n          [name]: value\r\n        });\r\n      }\r\n      componentDidMount(){\r\n        this.setState({friendid:this.props.valeur})\r\n        fetch('http://localhost:4000/app/groupechatlist', {\r\n          method: 'POST',\r\n          // credentials : include permet d'intégrer les cookie avec la requête\r\n          credentials: 'include', \r\n          body: JSON.stringify({\r\n            friendID: this.props.valeur\r\n          }),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          }\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n          this.setState({groupetext:response[0].message})\r\n          console.log(response[0].message)\r\n        })\r\n      }\r\n      componentDidUpdate(){\r\n        if(this.state.friendid !== this.props.valeur){\r\n          this.setState({friendid:this.props.valeur})\r\n          fetch('http://localhost:4000/app/groupechatlist', {\r\n            method: 'POST',\r\n            credentials: 'include', \r\n            body: JSON.stringify({\r\n              friendID: this.props.valeur\r\n            }),\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n            }\r\n          })\r\n          .then(response => response.json())\r\n          .then(response => {\r\n            this.setState({groupetext:response[0].message})\r\n            console.log(response[0].message)\r\n          })\r\n        }\r\n      }\r\n\r\n    render() {\r\n      return (\r\n        <div className=\"colone-droite\">\r\n          <p>{this.props.valeur}</p>\r\n          <div className=\"chat\">\r\n            <div className=\"chat\">\r\n              {this.state.groupetext.map((mess)=>(\r\n                <div className=\"message-envoye\">\r\n                  <p>{mess.author}</p>\r\n                  <p>{mess.text}</p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            </div>\r\n            \r\n            <div className=\"message\">\r\n            <form className=\"forme-message\" onSubmit={this.onSubmit}>\r\n                    <input \r\n                    name=\"message\"\r\n                    type=\"text\" \r\n                    placeholder=\"type your message\"\r\n                    value={this.state.message}\r\n                    onChange={this.handleInputChange}\r\n                    required\r\n                    />\r\n                    <input type=\"submit\" value=\"Submit\"/>\r\n                </form>\r\n            </div>\r\n        </div>\r\n      ); \r\n    }\r\n  }","D:\\matth\\programation\\my-app\\NSI-Projet\\src\\application2.jsx",[],"D:\\matth\\programation\\my-app\\NSI-Projet\\src\\withAuth.jsx",[],"D:\\matth\\programation\\my-app\\NSI-Projet\\src\\components\\friend_nom.jsx",["86"],"import React, { Component } from 'react';\r\nimport '../style/app.css'\r\n\r\n\r\nexport default class friend_nom extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            nom:'',\r\n            id:''\r\n        };\r\n      }\r\n    componentDidMount(){\r\n        fetch('http://localhost:4000/app/getFriendName', {\r\n          method: 'POST',\r\n          // credentials : include permet d'intégrer les cookie avec la requête\r\n          credentials: 'include', \r\n          body: JSON.stringify({\r\n            name: this.props.id\r\n          }),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          }\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            this.setState({nom:response})\r\n            this.setState({id:this.props.id})\r\n        })\r\n    }\r\n    componentDidUpdate(){\r\n        if(this.state.id != this.props.id){\r\n            fetch('http://localhost:4000/app/getFriendName', {\r\n                method: 'POST',\r\n                // credentials : include permet d'intégrer les cookie avec la requête\r\n                credentials: 'include', \r\n                body: JSON.stringify({\r\n                  name: this.props.id\r\n                }),\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                  'Accept': 'application/json'\r\n                }\r\n              })\r\n              .then(response => response.json())\r\n              .then(response => {\r\n                  this.setState({nom:response})\r\n                  this.setState({id:this.props.id})\r\n              })\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <p>\r\n                {this.state.nom}\r\n            </p>\r\n        );\r\n    }\r\n}","D:\\matth\\programation\\my-app\\NSI-Projet\\src\\friends-liste.jsx",["87","88","89","90","91","92"],"import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Router, Link, Switch } from \"react-router-dom\"\r\nimport './style/app.css';\r\nimport Chat from './components/chat';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\nexport default class friendsliste extends Component {\r\n    \r\n      // création du State \"friend\"\r\n      constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          friend : '',\r\n          message : '',\r\n          amislist: [{_id:0, _pseudo:\"\"}],\r\n          room:''\r\n        };\r\n      }\r\n    \r\n      // ajout des changement lorsque le texte de l'input change\r\n      handleInputChange = (event) => {\r\n        const { value, name } = event.target;\r\n        this.setState({\r\n          [name]: value\r\n        });\r\n      }\r\n\r\n      // fonction permettant de faire une requête POST au serveur et d'envoyer les données\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log(\"state envois demande amis : \",this.state)\r\n        // requête POST\r\n        fetch('http://localhost:4000/app/newfriend', {\r\n          method: 'POST',\r\n          // credentials : include permet d'intégrer les cookie avec la requête\r\n          credentials: 'include', \r\n          body: JSON.stringify({\r\n            new_friend: this.state.friend\r\n          }),\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        // renvois message de réussite ou non\r\n        .then(res => {\r\n          if (res.status === 200) {\r\n            this.setState({message: \"\"})\r\n          } else if(res.status === 400){\r\n            this.setState({message : \"l'utilisateur rechercher n'existe pas\"})\r\n          } else if(res.status === 402){\r\n            this.setState({message: \" vous avez déja cette utilisateur en amis\"})\r\n          } else{\r\n              console.log(\"erreur\")\r\n          }\r\n        })\r\n      }\r\n      componentDidMount(){\r\n        fetch('http://localhost:4000/app/friendlist', {\r\n          method: 'GET',\r\n          // credentials : include permet d'intégrer les cookie avec la requête\r\n          credentials: 'include', \r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          }\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n          console.log(response)\r\n          this.setState({amislist:response.friends})\r\n          console.log(\"state\", this.state.amislist)\r\n        })\r\n      }\r\n\r\n\r\n    render() {\r\n      const {message} = this.state\r\n      return (\r\n      <div className=\"corps\">\r\n        <div className=\"colone-gauche\">\r\n          <div className=\"add-friends\">\r\n            <form onSubmit={this.onSubmit}>\r\n                <input \r\n                name=\"friend\"\r\n                type=\"text\" \r\n                placeholder=\"add a friend\"\r\n                value={this.state.friend}\r\n                onChange={this.handleInputChange}\r\n                required\r\n                />\r\n                <input type=\"submit\" value=\"Submit\"/>\r\n                <p>{message}</p>\r\n            </form>\r\n          </div>\r\n        <div className=\"friend-list\">\r\n          {this.state.amislist.map((amis)=>(\r\n            <Link to={\"/app2/\"+amis._id} >\r\n                <div className=\"friend\" name={amis._pseudo}>\r\n                    <p>{amis._pseudo}</p>\r\n                </div>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n      ); \r\n    }\r\n  }",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":2,"column":32,"nodeType":"99","messageId":"100","endLine":2,"endColumn":38},{"ruleId":"97","severity":1,"message":"101","line":2,"column":40,"nodeType":"99","messageId":"100","endLine":2,"endColumn":44},{"ruleId":"97","severity":1,"message":"102","line":9,"column":8,"nodeType":"99","messageId":"100","endLine":9,"endColumn":12},{"ruleId":"97","severity":1,"message":"103","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":13},{"ruleId":"97","severity":1,"message":"104","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":23},{"ruleId":"97","severity":1,"message":"105","line":3,"column":25,"nodeType":"99","messageId":"100","endLine":3,"endColumn":30},{"ruleId":"97","severity":1,"message":"98","line":3,"column":32,"nodeType":"99","messageId":"100","endLine":3,"endColumn":38},{"ruleId":"97","severity":1,"message":"106","line":3,"column":46,"nodeType":"99","messageId":"100","endLine":3,"endColumn":52},{"ruleId":"107","severity":1,"message":"108","line":59,"column":88,"nodeType":"109","endLine":59,"endColumn":104},{"ruleId":"110","severity":1,"message":"111","line":63,"column":17,"nodeType":"112","endLine":63,"endColumn":31},{"ruleId":"110","severity":1,"message":"111","line":64,"column":17,"nodeType":"112","endLine":64,"endColumn":32},{"ruleId":"110","severity":1,"message":"111","line":65,"column":17,"nodeType":"112","endLine":65,"endColumn":31},{"ruleId":"97","severity":1,"message":"103","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":13},{"ruleId":"97","severity":1,"message":"104","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":23},{"ruleId":"97","severity":1,"message":"105","line":3,"column":25,"nodeType":"99","messageId":"100","endLine":3,"endColumn":30},{"ruleId":"97","severity":1,"message":"98","line":3,"column":32,"nodeType":"99","messageId":"100","endLine":3,"endColumn":38},{"ruleId":"97","severity":1,"message":"106","line":3,"column":46,"nodeType":"99","messageId":"100","endLine":3,"endColumn":52},{"ruleId":"107","severity":1,"message":"108","line":59,"column":88,"nodeType":"109","endLine":59,"endColumn":104},{"ruleId":"110","severity":1,"message":"111","line":62,"column":17,"nodeType":"112","endLine":62,"endColumn":31},{"ruleId":"110","severity":1,"message":"111","line":63,"column":17,"nodeType":"112","endLine":63,"endColumn":32},{"ruleId":"110","severity":1,"message":"111","line":64,"column":17,"nodeType":"112","endLine":64,"endColumn":31},{"ruleId":"97","severity":1,"message":"104","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":23},{"ruleId":"97","severity":1,"message":"105","line":3,"column":25,"nodeType":"99","messageId":"100","endLine":3,"endColumn":30},{"ruleId":"97","severity":1,"message":"98","line":3,"column":32,"nodeType":"99","messageId":"100","endLine":3,"endColumn":38},{"ruleId":"97","severity":1,"message":"106","line":3,"column":46,"nodeType":"99","messageId":"100","endLine":3,"endColumn":52},{"ruleId":"110","severity":1,"message":"111","line":18,"column":17,"nodeType":"112","endLine":18,"endColumn":31},{"ruleId":"110","severity":1,"message":"111","line":19,"column":17,"nodeType":"112","endLine":19,"endColumn":32},{"ruleId":"110","severity":1,"message":"111","line":20,"column":17,"nodeType":"112","endLine":20,"endColumn":31},{"ruleId":"110","severity":1,"message":"113","line":31,"column":17,"nodeType":"112","endLine":31,"endColumn":57},{"ruleId":"97","severity":1,"message":"114","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":10},{"ruleId":"97","severity":1,"message":"115","line":4,"column":10,"nodeType":"99","messageId":"100","endLine":4,"endColumn":20},{"ruleId":"116","severity":1,"message":"117","line":33,"column":26,"nodeType":"118","messageId":"119","endLine":33,"endColumn":28},{"ruleId":"97","severity":1,"message":"104","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":23},{"ruleId":"97","severity":1,"message":"105","line":2,"column":25,"nodeType":"99","messageId":"100","endLine":2,"endColumn":30},{"ruleId":"97","severity":1,"message":"98","line":2,"column":32,"nodeType":"99","messageId":"100","endLine":2,"endColumn":38},{"ruleId":"97","severity":1,"message":"106","line":2,"column":46,"nodeType":"99","messageId":"100","endLine":2,"endColumn":52},{"ruleId":"97","severity":1,"message":"102","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":12},{"ruleId":"97","severity":1,"message":"115","line":5,"column":10,"nodeType":"99","messageId":"100","endLine":5,"endColumn":20},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Chat' is defined but never used.","'axios' is defined but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'io' is defined but never used.","'withRouter' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]